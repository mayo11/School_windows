1、寻找数组的中心索引
class Solution {
public:
    int pivotIndex(vector<int>& nums) {
        int i,j,lsum=0,rsum=0,re=-1;
        for(i=1;i<nums.size();i++){
            rsum+=nums[i];
        }
        for(j=0;j<nums.size();j++){
            if(lsum==rsum){
                re=j;
                break;
            }
            lsum+=nums[j];
            rsum-=nums[j+1];
        }
        return re;
    }
};
2、搜索插入位置
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int begin=0,end=nums.size()-1,mid;
        while(begin<=end){
            mid=(begin+end)/2;
            if(nums[mid]==target){
                return mid;
             }else if(nums[mid]>target){
               end=mid-1;
            }else{
                begin=mid+1;
            }
        }
        return begin;
    }
};
3、最长公共前缀
class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
        string a = "";
        int n = strs.size();
        if(n == 0)
            return a;
        if(n == 1)
            return strs[0];
        for(int j = 0;j<strs[0].size();j++){
            for(int i = 1;i<strs.size();i++)
            {
                if(strs[i][j]!=strs[0][j])
                    return a;
            }
            a+=strs[0][j];
        }
        return a;
    }
};
